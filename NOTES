## Design

we use heap allocated objects to represent C's statements(`Stmt`), C's types(`CType`), C's expressions(`Expr`).

To clone a `Expr`, `Stmt` or `CType`, it's better to use the `xcc_context`'s' `clone` method.

the `UniqueStmt` are used for represent empty node, and will removed when building compount statement.

### statements

* A `HeadStmt` is a statement that has no succeeders.
  For example, a *translation-unit* or a *function-body* is a `HeadStmt`.
  The way to access it's body is use the `next` member to iterate all childs.
* A `NullStmt` only appears in stack allocated for some reason to make code easy to write, this is not a valid Stmt node.
* A `CompoundStmt` is a statement begins with `{` and ends with `}`.To iterator it's childs, use `inner` member.

## getelementptr

When using getelementptr for **pointer + integer**, llvm treated operand as signed. 
  So a **unsigned char** should be zero extend to **intptr_t**(GNU Assembly: `movz` for zero extend, `movs` for signed extend, LLVM: `zext`, `sext`), to do unsigned addition.

## inline, extern inline, and static inline

* c99:
  - `static inline`: only visible in one translation-unit, just like *static function*(will call any out-of-line function).
  - `inline`: only visible in one translation-unit(inlined, or as static/private function), and may called as external function(so must provide a definition in other translation units).
  - `extern inline`: just a inline hint to comipler, nothing different from *extern function*, so is *externally visile*.
* GNU 99
  swap the meanings of `extern inline` and `inline`.

```bash
$ cat x.c
int getchar();

extern inline void foo()
{
        getchar();
}

$ clang -c x.c -std=gnu99
$ gcc x.o x.o
/usr/bin/ld: x.o: in function `foo':
x.c:(.text+0x0): multiple definition of `foo'; x.o:x.c:(.text+0x0): first defined here
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x24): undefined reference to `main'
collect2: error: ld returned 1 exit status
$ clang -c x.c -std=gnu89
$ gcc x.o x.o
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x24): undefined reference to `main'
collect2: error: ld returned 1 exit status
```
